CGameState 集
=======================

在這個章節，我們會介紹 CGameState 的運作原理。
對於這個章節所提到的 function，可參考 `函式庫文件 <https://ntut-xuan.github.io/LeistungsstarkesGameFramework>`_ 來得到更詳盡的函式說明。

圖解 CGameState
-----------------------

在遊戲設計中，我們主要會在 ``CGameState`` 群進行設計，也就是 ``CGameStateInit``、``CGameStateRun``、``CGameStateOver``。
我們以一張圖來呈現目前 ``CGameState`` 群的運作模式。

.. image:: https://imgur.com/LcXJ475.jpg

我們會在 ``OnBeginState`` 中初始化遊戲開始的數值，讓每次從初始畫面開始遊戲後，遊戲數值會初始化成新遊戲。
接下來將會不斷運行 ``OnMove``、``OnShow`` 函式來運行遊戲內容與呈現遊戲畫面。
除此之外，還有 ``Mouse/Key events`` 來處理滑鼠與鍵盤相關的事件，處理當滑鼠被移動或點擊，或鍵盤被按下或放開時的事件。
在接下來的章節，我們會詳細描述這幾個部分。


OnBeginState() 函式
~~~~~~~~~~~~~~~~~~~~~~~
在這個函式中，主要處理了遊戲數值初始化，使遊戲成為新遊戲的函數。

這個函數在從 ``CGameStateInit`` 進入到 ``CGameStateRun`` 後才會觸發。


OnInit() 函式
~~~~~~~~~~~~~~~~~~~~~~~
在這個函式中，主要處理了圖片初始化、素材初始化等相關細節。

在遊戲初始化時觸發一次。


OnMove() 函式
~~~~~~~~~~~~~~~~~~~~~~~
在這個函式中，主要處理了遊戲運行時的部分，為遊戲運行的常駐函式。

這個函式在一秒中約運行 30 次，通常會用來處理遊戲運行的細節，例如圖片因為條件而變換幀，人物按住某按鍵後可以持續移動的細節。


OnShow() 函式
~~~~~~~~~~~~~~~~~~~~~~~
在這個函式中，主要處理了遊戲顯示圖片的部分，為遊戲運行的常駐函式。

這個函式在一秒中約運行 30 次，通常會用來處理呈現圖片的動作，且必須要在這個函式中呈現圖片。

你可以在這個地方處理圖片呈現、圖片疊加、文字印出等相關的細節。


Key/Mouse 偵聽函式群
~~~~~~~~~~~~~~~~~~~~~~~
這個函式群具有許多函式，可以用來偵聽滑鼠左鍵右鍵按下、滑鼠移動、鍵盤按鍵按下、或鍵盤按鍵釋放等事件。

這個函式群具有下列這些函式：
 - ``OnKeyDown``：用於處理鍵盤按鍵按下的事件。
 - ``OnKeyUp``：用於處理鍵盤按鍵釋放的事件。
 - ``OnLButtonDown``：用於處理滑鼠左鍵按下的事件。
 - ``OnLButtonUp``：用於處理滑鼠左鍵釋放的事件。
 - ``OnRButtonDown``：用於處理滑鼠右鍵按下的事件。
 - ``OnRButtonUp``：用於處理滑鼠右鍵放開的事件。
 - ``OnMouseMove``：用於處理滑鼠移動的事件。

我們不知道這個函式一秒能夠運行幾次，但我們可以假設它非常快。
